@model Gestionale_Pizzeria.Models.Utenti

@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
<div class="container d-flex justify-content-center">
    <div class="form-horizontal d-flex flex-column justify-content-center align-items-center col-md-12">
        <h2>Registrazione</h2>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="col d-flex gap-3">
        <div class="form-group d-flex col-md justify-content-center align-items-center flex-column">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label text-center" })
            <div class="d-flex col-md my-2 justify-content-center align-items-center text-white flex-column">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex col-md justify-content-center align-items-center flex-column">
            @Html.LabelFor(model => model.Pwd, htmlAttributes: new { @class = "control-label text-center" })
            <div class="d-flex col-md my-2 justify-content-center align-items-center text-white flex-column">
                @Html.EditorFor(model => model.Pwd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pwd, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col d-flex gap-3">
        <div class="form-group d-flex col-md justify-content-center align-items-center flex-column">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label text-center" })
            <div class="d-flex col-md my-2 justify-content-center align-items-center text-white flex-column">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex col-md justify-content-center align-items-center flex-column">
            @Html.LabelFor(model => model.Cognome, htmlAttributes: new { @class = "control-label text-center" })
            <div class="d-flex col-md my-2 justify-content-center align-items-center text-white flex-column">
                @Html.EditorFor(model => model.Cognome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cognome, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
        <div class="form-group d-flex col-md-12 justify-content-center align-items-center flex-column">
            @Html.LabelFor(model => model.IdRuolo, "Ruolo", htmlAttributes: new { @class = "control-label text-center" })
            <div class="d-flex col-md-12 my-3 justify-content-center align-items-center text-white flex-column">
                @Html.DropDownList("IdRuolo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdRuolo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Effettua Registrazione" class="btn btn-success" />
            </div>
        </div>
    </div>
</div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
